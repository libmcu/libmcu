name: release

on:
  repository_dispatch:
    types: [release-approved]

jobs:
  build:
    name: Create Release
    runs-on: ubuntu-latest
    container: libmcu/ci:latest

    steps:
      - name: Clone Repository
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Prepare
        run: |
          GH_VERSION=$(curl -s https://api.github.com/repos/cli/cli/releases/latest | grep '"tag_name":' | cut -d '"' -f 4 | sed 's/v//')
          wget "https://github.com/cli/cli/releases/download/v${GH_VERSION}/gh_${GH_VERSION}_linux_amd64.tar.gz"
          tar -xzf gh_${GH_VERSION}_linux_amd64.tar.gz
          mv gh_${GH_VERSION}_linux_amd64/bin/gh /usr/local/bin/
          chmod +x /usr/local/bin/gh

      - name: Fix git safe.directory in container
        run: git config --global --add safe.directory $(pwd)

      - name: Get Version
        id: get_version
        run: |
          TAG_VERSION="${{ github.event.client_payload.tag }}"
          echo "TAG_VERSION=$TAG_VERSION" >> $GITHUB_ENV

      - name: Build Project
        run: CROSS_COMPILE=arm-none-eabi VERSION=${{ env.TAG_VERSION }} make

      - name: Calculate Hash
        id: hash
        run: |
          HASH=$(cat build/libmcu_*.sha256)
          echo "HASH=$HASH" >> $GITHUB_ENV

      - name: Create GitHub Release
        run: |
          gh release create v${{ env.TAG_VERSION }} \
            --title "v${{ env.TAG_VERSION }}" \
            --generate-notes
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
